from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, filters, ContextTypes
import json

# üîê –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –æ—Ç BotFather
TOKEN = '7291726221:AAGRvoBZbiPsdMzCOGxgqU9uH_q85GoRvy4'
REACTION_EMOJI = 'üëç'

# üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤
def load_bad_words():
    try:
        with open('bad_words.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except:
        return []

# ‚ùó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤
def contains_bad_words(text, bad_words):
    lowered = text.lower()
    for word in bad_words:
        if word.lower() in lowered:
            return True
    return False

# üü® –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message:
        return

    user = update.message.from_user
    chat_id = update.message.chat.id
    text = update.message.text or ""

    bad_words = load_bad_words()

    # –°—Ç–∞–≤–∏–º —ç–º–æ–¥–∑–∏-—Ä–µ–∞–∫—Ü–∏—é
    try:
        await context.bot.send_reaction(chat_id=chat_id, message_id=update.message.message_id, emoji=REACTION_EMOJI)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
    if contains_bad_words(text, bad_words):
        try:
            await update.message.delete()
            await context.bot.ban_chat_member(chat_id=chat_id, user_id=user.id)
            print(f"–ó–∞–±–∞–Ω–µ–Ω {user.username} –∑–∞: {text}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏/–±–∞–Ω–µ: {e}")

# üîπ –ö–æ–º–∞–Ω–¥–∞ /id ‚Äî –ø—Ä–∏—Å—ã–ª–∞–µ—Ç ID –≥—Ä—É–ø–ø—ã
async def get_chat_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"ID –≥—Ä—É–ø–ø—ã: {chat_id}")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("id", get_chat_id))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
    app.run_polling()
